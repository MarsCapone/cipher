{"name":"Cipher","tagline":"Encrypts and decrypts classical ciphers, using Java.","body":"Cipher \r\n======\r\n\r\nEncrypts and decrypts classical ciphers, using Java.\r\n\r\nInterested in ciphers so just created this and previously created a similar program in Python. Just started Java in CS, so thought I would make the program again in Java. Hopefully using better code, and faster, and with a GUI and full command line interface.\r\nUsing this program for any sort of competition is cheating.\r\n\r\n***\r\n\r\n**Currently implemented ciphers**:\r\n\r\n* Atbash: encryption and decryption (there is only one key)\r\n* ROT13: encryption and decryption (there is only one key)\r\n* Caesar Shift: encryption and decryption, with a key or force search\r\n* Substitution Cipher: encryption and decryption with or without a key\r\n* Vigenere Cipher: encryption and decryption with a key, a key length or no key\r\n* Affine Shift: encryption and decryption with or without a key.\r\n\r\n**Planned Ciphers**:\r\n\r\n* Autokey\r\n* Beaufort\r\n* Hill\r\n* Unknown (attempts decryption even if the cipher is unknown)\r\n\r\n**Extras**:\r\n\r\n* There is a GUI\r\n* I currently implements Encryption and Decryption of Atbash, ROT13, Caesar Shift, Substitution Cipher, Vigenere Cipher and Affine Shift\r\n* It can also somewhat infer spaces, but this needs work.\r\n* It has various statistical methods for checking how English a string looks, including:\r\n    * Chi Squared Statistic\r\n    * Index of Coincidence\r\n    * NGram Scoring\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}